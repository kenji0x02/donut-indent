{"version":3,"sources":["donut-indent.min.js","node_modules/browser-pack/_prelude.js","src/color.js","src/donut-indent-helper.js","src/donut-indent.js","src/modal.js","src/overlay-content.js","src/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","splitRGB","rgb","rgbArray","replace","match","map","c","parseInt","split","rgbCode","g","b","el","toString","join","rgbToHls","h","max","Math","min","type","hlsToRgb","round","tmp","m2","m1","darken","color","percentage","hls","darkenRgb",2,"createSequentialNo","hObject","headerTagNumbers","initialTag","forEach","sequentialNo","$","each","index","value","headers","extend","headerNumber","utils","headingNumber","push","createPercentage","normalizeHeader","filter","j","createID","tag","HEADER_TAG_PREFIX","getHeaderFontSize","css","getHeaderLineHeight","calcIconHalfSize","fontSize","calcMarginTop","lineHeight","calcCenter","./utils.js",3,"initializeCanvasSize","iconSize","marginTop","canvas","width","height","renderDonut","radius","center","colorCode","ctx","getContext","ninetyDegree","startRadian","endRadian","beginPath","moveTo","arc","fillStyle","fill","renderDonutIndent","canvasID","indentArray","headerTag","array","helper","iconHalfSize","document","getElementById","DonutIndent","radiusRatio","appendCanvas","headerIDs","wrap","canvasHTML","before","appendDonutIndent","settings","indentDepth","overlayContent","content","create","initialize","append","DARKEN_PERCENTAGE_DIFF","defaults","gammaValue","init","options","Array","apply","_","reverse","pow","donutIndent","jQuery","./color.js","./donut-indent-helper.js","./modal.js","./overlay-content.js",4,"centeringModalSyncer","w","window","cw","outerWidth","ch","outerHeight","scrollSize","getScrollBarWidth","position","getModalPosition","left","x","top","y","scrollsize","innerWidth","prop","hide","contentWidth","windowWidth","contentHeight","windowHeight","diffX","diffY","on","addClass","fadeIn","show","off","fadeOut","removeClass","remove","unwrap","resize","_getScrollBarWidth","_getModalPosition",5,"ulElement","braUl","ulCount","preHeadingDiff","minHeadingNumber","listElement","text","headingDiff","ketUl","lastValue","id","anchorID","toOverlayAnchorID","bra","ket","hNo","initializeOverlayContent","children","this","attr",6,"undefined","tagName"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,CCLA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCgBA,QAAAK,GAAAC,GACA,GAAAC,MACAD,EAAAA,EAAAE,QAAA,KAAA,GAUA,OARAD,GADA,GAAAD,EAAAJ,OACAI,EAAAG,MAAA,SAAAC,IAAA,SAAAC,GACA,MAAAC,UAAAD,EAAA,MAGAL,EAAAO,MAAA,IAAAH,IAAA,SAAAC,GACA,MAAAC,UAAAD,EAAAA,EAAA,MAMA,QAAAG,GAAAzB,EAAA0B,EAAAC,GACA,MAAA,KAAA3B,EAAA0B,EAAAC,GAAAN,IAAA,SAAAO,GACA,MAAAA,GAAAC,SAAA,IAAAV,QAAA,aAAA,SACAW,KAAA,IAGA,QAAAC,GAAA/B,EAAA0B,EAAAC,GACA,GAAAK,GACAtB,EAAAT,CAGAD,IAAA,IACA0B,GAAA,IACAC,GAAA,GACA,IAAAM,GAAAC,KAAAD,IAAAC,KAAAD,IAAAjC,EAAA0B,GAAAC,GACAQ,EAAAD,KAAAC,IAAAD,KAAAC,IAAAnC,EAAA0B,GAAAC,EAaA,KATAK,EADAC,GAAAE,EACA,EACAF,GAAAjC,EACA,IAAA0B,EAAAC,IAAAM,EAAAE,GAAA,EACAF,GAAAP,EACA,IAAAC,EAAA3B,IAAAiC,EAAAE,GAAA,IAEA,IAAAnC,EAAA0B,IAAAO,EAAAE,GAAA,IAGA,EAAAH,GACAA,GAAA,GAeA,OAXAtB,IAAAuB,EAAAE,GAAA,EAIAlC,EADAgC,GAAAE,EACA,EAEA,GAAAzB,GACAuB,EAAAE,IAAAF,EAAAE,IACAF,EAAAE,IAAA,EAAAF,EAAAE,IAGAH,EAAAA,EAAAtB,EAAAA,EAAAT,EAAAA,EAAAmC,KAAA,OAGA,QAAAC,GAAAL,EAAAtB,EAAAT,GAGA,IAFA,GAAAD,GAAA0B,EAAAC,EAEA,EAAAK,GACAA,GAAA,GAKA,IAHAA,GAAA,IAGA,GAAA/B,EAGA,MADAS,GAAAwB,KAAAI,MAAA,IAAA5B,IACAV,EAAAU,EAAAgB,EAAAhB,EAAAiB,EAAAjB,EAAA0B,KAAA,MAGA,IAEAG,GAFAC,EAAA,GAAA9B,EAAAA,GAAA,EAAAT,GAAAS,EAAAT,EAAAS,EAAAT,EACAwC,EAAA,EAAA/B,EAAA8B,CA2CA,OAxCAD,GAAAP,EAAA,IACAO,EAAA,MACAA,GAAA,KAIAvC,EADA,GAAAuC,EACAE,GAAAD,EAAAC,GAAAF,EAAA,GACA,IAAAA,EACAC,EACA,IAAAD,EACAE,GAAAD,EAAAC,IAAA,IAAAF,GAAA,GAEAE,EAGAF,EAAAP,EAEAN,EADA,GAAAa,EACAE,GAAAD,EAAAC,GAAAF,EAAA,GACA,IAAAA,EACAC,EACA,IAAAD,EACAE,GAAAD,EAAAC,IAAA,IAAAF,GAAA,GAEAE,EAGAF,EAAAP,EAAA,IACA,EAAAO,IACAA,GAAA,KAGAZ,EADA,GAAAY,EACAE,GAAAD,EAAAC,GAAAF,EAAA,GACA,IAAAA,EACAC,EACA,IAAAD,EACAE,GAAAD,EAAAC,IAAA,IAAAF,GAAA,GAEAE,GAGAzC,EAAAkC,KAAAI,MAAA,IAAAtC,GAAA0B,EAAAQ,KAAAI,MAAA,IAAAZ,GAAAC,EAAAO,KAAAI,MAAA,IAAAX,GAAAS,KAAA,OAnIArB,EAAAJ,QAAA+B,OAAA,SAAAC,EAAAC,GACA,GAAA,EAAAA,EAAA,GAAAA,EAAA,EAAA,IACA,MAAA,KAEA,IAAA3B,GAAAD,EAAA2B,GACAE,EAAAd,EAAAd,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA6B,EAAAT,EAAAQ,EAAAb,EAAAa,EAAAnC,EAAA,IAAAkC,EAAAC,EAAA5C,EACA,OAAAwB,GAAAqB,EAAA9C,EAAA8C,EAAApB,EAAAoB,EAAAnB,SFgIMoB,GAAG,SAAS1C,EAAQU,EAAOJ,GGvIjC,YAKA,SAAAqC,GAAAC,EAAAC,GACA,GAAAC,KACAD,GAAAE,QAAA,SAAAxB,GACAuB,EAAAvB,GAAA,GAGA,IAAAyB,KAwBA,OAtBAC,GAAAC,KAAAN,EAAA,SAAAO,EAAAC,GACA,GAAAC,GAAAJ,EAAAK,QAAA,KAAAR,EACAK,GAAA,IACAE,EAAAJ,EAAAK,QAAA,KAAAN,EAAAG,EAAA,IAGA,IAAAI,GAAAC,EAAAC,cAAAL,EAGAC,GAAA,aAAAE,EAGAF,EAAAE,IAAA,EAGAV,EAAAE,QAAA,SAAAxB,GACAA,EAAAgC,IACAF,EAAA9B,GAAA,KAGAyB,EAAAU,KAAAL,KAEAL,EAGA,QAAAW,GAAAX,EAAAH,GACA,GAAAG,EAAAxC,QACAqC,EAAAE,QAAA,SAAAvD,GACAA,GAAAwD,EAAA,GAAAxD,GACAwD,EAAA,GAAAxD,GAAA,IAEAwD,EAAA,GAAAxD,GAAA,GAKA,KAAA,GAAAS,GAAA,EAAAA,EAAA+C,EAAAxC,OAAAP,IAAA,CAEA,GAAA+C,EAAA/C,GAAA,aAAA+C,EAAA/C,EAAA,GAAA,aAAA,CACA,GAAA2D,GAAAf,EAAAgB,OAAA,SAAAtC,GACA,MAAAA,GAAAyB,EAAA/C,GAAA,cAGA2D,GAAAb,QAAA,SAAAxB,GAEA,IAAA,GADAK,GAAAoB,EAAA/C,EAAA,GAAAsB,GACAuC,EAAA7D,EAAA,EAAA6D,GAAA,GACA,GAAAd,EAAAc,GAAAvC,GADAuC,IAIAd,EAAAc,GAAAvC,GAAAM,KAAAI,MAAAe,EAAAc,GAAAvC,GAAAK,EAAA,OAMA3B,GAAA+C,EAAAxC,OAAA,GACAqC,EAAAE,QAAA,SAAAxB,GAEA,IAAA,GADAK,GAAAoB,EAAA/C,GAAAsB,GACAuC,EAAA7D,EAAA6D,GAAA,GACA,GAAAd,EAAAc,GAAAvC,GADAuC,IAIAd,EAAAc,GAAAvC,GAAAM,KAAAI,MAAAe,EAAAc,GAAAvC,GAAAK,EAAA,OAKA,MAAAoB,GAGA,QAAAe,GAAAnB,EAAAC,GACA,GAAAmB,GAAAL,EAAAhB,EAAAC,EAAAC,GAAAA,EAGA,OAAAmB,GAAAhD,IAAA,SAAAO,GACA,MAAA0C,GAAApB,EAAA7B,IAAA,SAAAxB,GAAA,MAAA+B,GAAA/B,KAAAiC,KAAA,OAIA,QAAAyC,GAAAX,GACA,MAAAN,GAAAM,EAAA,WAAAY,IAAA,YAAArD,QAAA,KAAA,IAAA,EAGA,QAAAsD,GAAAb,GACA,MAAAN,GAAAM,EAAA,WAAAY,IAAA,eAAArD,QAAA,KAAA,IAAA,EAGA,QAAAuD,GAAAC,GACA,MAAAzC,MAAAI,MAAA,IAAAqC,GAGA,QAAAC,GAAAC,EAAAF,GACA,MAAAzC,MAAAI,MAAA,IAAAqC,EAAA,IAAAE,EAAAF,IAGA,QAAAG,GAAAH,GACA,MAAAzC,MAAAI,MAAA,IAAAqC,GA3GA,GAAAL,GAAA,gBACAT,EAAAxD,EAAA,aA6GAU,GAAAJ,SACAqC,mBAAAA,EACAgB,iBAAAA,EACAI,SAAAA,EACAG,kBAAAA,EACAE,oBAAAA,EACAC,iBAAAA,EACAE,cAAAA,EACAE,WAAAA,KHiJGC,aAAa,IAAIC,GAAG,SAAS3E,EAAQU,EAAOJ,IIzQ/C,SAAA2C,GACA,YAQA,SAAA2B,GAAAC,EAAAC,EAAAC,GACA9B,EAAA8B,GAAAZ,IAAA,aAAAW,GACA7B,EAAA8B,GAAAZ,IAAA,eAAAW,GACAC,EAAAC,MAAAH,EACAE,EAAAE,OAAAJ,EAGA,QAAAK,GAAAC,EAAAC,EAAA7C,EAAA8C,EAAAN,GACA,GAAAO,GAAAP,EAAAQ,WAAA,MACAC,EAAA,mBACAC,GAAAD,EACAE,EAAAF,GAAA,IAAAjD,EAAA,EACA+C,GAAAK,YACAL,EAAAM,OAAAR,EAAAA,GACAE,EAAAO,IAAAT,EAAAA,EAAAD,EAAAM,EAAAC,GAAA,GACAJ,EAAAQ,UAAAT,EACAC,EAAAS,OAGA,QAAAC,GAAAC,GACA,GAAAC,GAAAD,EAAAnF,QAAA,gBAAA,IAAAK,MAAA,KAAAH,IAAA,SAAAO,GACA,MAAAA,GAAA,IAEA4E,EAAA,IAAAD,EAAArC,OAAA,SAAAtC,EAAA4B,EAAAiD,GAAA,MAAA,IAAA7E,IAAAf,OACA8D,EAAA+B,EAAAnC,kBAAAiC,GACA3B,EAAA6B,EAAAjC,oBAAA+B,GACAG,EAAAD,EAAAhC,iBAAAC,GACAQ,EAAAuB,EAAA9B,cAAAC,EAAAF,GACAc,EAAAiB,EAAA5B,WAAAH,GACAS,EAAAwB,SAAAC,eAAAP,EAGArB,GAAA,EAAA0B,EAAAxB,EAAAC,GAGAmB,EAAAnD,QAAA,SAAAxB,EAAA4B,EAAAiD,GACA,GAAAjB,GAAAtD,KAAAI,MAAAqE,EAAAG,EAAAC,YAAAvD,GAEA+B,GAAAC,EAAA,EAAAC,EAAA,IAAA,OAAAL,GAEAG,EAAAC,EAAAC,EAAA7D,EAAAkF,EAAAnE,MAAAa,GAAA4B,KAKA,QAAA4B,GAAA/D,EAAAgE,GACA3D,EAAAC,KAAAN,EAAA,SAAAO,EAAAC,GACAH,EAAAG,GAAAyD,KAAA,cACA,IAAAC,GAAA,6DAAAF,EAAAzD,GAAA,UACAF,GAAAG,GAAA2D,OAAAD,KAIA,QAAAE,KACA,GAAApE,GAAAK,EAAA,WAAAY,OAAA,SAAAV,EAAA5B,GAAA,MAAAiC,GAAAC,cAAAlC,IAAAkF,EAAAQ,SAAAC,cACAN,EAAAP,EAAAtC,SAAAnB,EAAA6D,EAAA5D,iBACA8D,GAAA/D,EAAAgE,GACAA,EAAA7D,QAAA,SAAAxB,GACAyE,EAAAzE,IAEA,IAAA4F,GAAAnH,EAAA,wBACAoH,EAAAD,EAAAE,OAAAzE,EAAAgE,EACAO,GAAAG,aACArE,EAAA,kBAAAsE,OAAAH,GArEA,GACA5D,IADAxD,EAAA,cACAA,EAAA,eACAqG,EAAArG,EAAA,4BAEAwH,EAAA,GAoEAf,IAEAA,IACAgB,UACAP,YAAA,EACA5E,MAAA,UACAoF,WAAA,KAGAT,SAAAhE,EAAAK,QAAA,KAAAmD,EAAAgB,UAEAE,KAAA,SAAAC,GACA,GAAAtF,GAAAtC,EAAA,aACAyG,GAAAQ,SAAAhE,EAAAK,OAAAmD,EAAAgB,SAAAG,GACAnB,EAAA5D,iBAAAgF,MAAAC,MAAA,KAAAD,MAAApB,EAAAQ,SAAAC,cAAAlG,IAAA,SAAA+G,EAAA9H,GAAA,MAAAA,GAAA,IACAwG,EAAAC,YAAAzD,EAAAK,QAAA,KAAAmD,EAAA5D,kBAAAmF,UAAAhH,IAAA,SAAAO,GACA,MAAAM,MAAAoG,IAAA,EAAA1G,EAAAkF,EAAA5D,iBAAArC,OAAA,EAAAiG,EAAAQ,SAAAS,cAEAjB,EAAAnE,MAAAmE,EAAA5D,iBAAA7B,IAAA,SAAAO,GACA,MAAAe,GAAAD,OAAAoE,EAAAQ,SAAA3E,MAAAkF,GAAAjG,EAAA,QAMA0B,EAAAiF,YAAA,SAAAN,GACAnB,EAAAkB,KAAAC,GACAZ,MAGAmB,QAGAlF,EAAAiF,gBJkRGE,aAAa,EAAEC,2BAA2B,EAAEC,aAAa,EAAEC,uBAAuB,EAAE7D,aAAa,IAAI8D,GAAG,SAASxI,EAAQU,EAAOJ,GKnVnI,QAAAmI,KACA,GAAAC,GAAAzF,EAAA0F,QAAA3D,QACArD,EAAAsB,EAAA0F,QAAA1D,SACA2D,EAAA3F,EAAA,kBAAA4F,aACAC,EAAA7F,EAAA,kBAAA8F,cAEAC,EAAAC,IACAC,EAAAC,EAAAH,EAAAJ,EAAAF,EAAAI,EAAAnH,EACAsB,GAAA,kBAAAkB,KAAAiF,KAAAF,EAAAG,EAAA,KAAAC,IAAAJ,EAAAK,EAAA,OAIA,QAAAN,KACAhG,EAAA,QAAAsE,OAAA,yDACA,IAAAiC,GAAAb,OAAAc,WAAAxG,EAAA,cAAAyG,KAAA,cAEA,OADAzG,GAAA,cAAA0G,OACAH,EAGA,QAAAL,GAAAH,EAAAY,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAJ,EAAAC,EACAI,EAAAH,EAAAC,CACA,OAAAC,GAAA,GAAAC,EAAA,GACAZ,EAAA,EAAAE,EAAA,GACA,EAAAS,GAAAC,EAAA,GACAZ,IAAAW,EAAAhB,GAAA,EAAAO,EAAA,GACAS,EAAA,GAAA,EAAAC,GACAZ,EAAA,EAAAE,IAAAU,EAAAjB,GAAA,IAEAK,GAAAW,EAAA,EAAAT,GAAAU,EAAA,GAhEAhH,EAAAsD,UAAA2D,GAAA,QAAA,gBAAA,WAKA,MAHAjH,GAAA,cAAAkH,SAAA,QAGAlH,EAAA,kBAAAzC,OAAA,GAAA,GAGAyC,EAAA,QAAAsE,OAAA,kCAGAtE,EAAA,kBAAAmH,OAAA,QAEAnH,EAAA,kBAAA4D,KAAA,+BACA5D,EAAA,eAAAoH,OAGA5B,IAGAxF,EAAA,kBAAAmH,OAAA,YAEAnH,GAAA,gCAAAqH,MAAAJ,GAAA,QAAA,WAEAjH,EAAA,iCAAAsH,QAAA,OAAA,WAEAtH,EAAA,cAAAuH,YAAA,QAEAvH,EAAA,kBAAAwH,SACAxH,EAAA,kBAAAyH,OAAA,sCAwCAzH,EAAA0F,QAAAgC,OAAAlC,GAEA/H,EAAAJ,SACAsK,mBAAA3B,EACA4B,kBAAA1B,QLwYM2B,GAAG,SAAS9K,EAAQU,EAAOJ,GMxdjC,QAAAyK,GAAAnI,EAAAgE,GACA,GAAAQ,GAAA4D,EAAA,GACAC,EAAA,EAGAC,EAAA1H,EAAAC,cAAAb,EAAA,IAAAuI,EAAAvI,EACAwE,IAAA4D,EAAAE,GACAD,GAAAC,CAGA,KAAA,GAAAjL,GAAA,EAAAA,EAAA2C,EAAApC,OAAA,EAAAP,IAAA,CACA,GAAAmD,GAAAR,EAAA3C,EACAmH,IAAAgE,EAAAnI,EAAAG,GAAAiI,OAAAzE,EAAA3G,GAEA,IAAAqL,GAAA9H,EAAAC,cAAAb,EAAA3C,EAAA,IAAAuD,EAAAC,cAAAb,EAAA3C,GACAmH,IAAA4D,EAAAM,GACAlE,GAAAmE,EAAAD,GAEAL,GAAAK,EAGA,GAAAE,GAAA5I,EAAAA,EAAApC,OAAA,EAMA,OALA4G,IAAAgE,EAAAnI,EAAAuI,GAAAH,OAAAzE,EAAAhE,EAAApC,OAAA,IAGA4G,GAAAmE,GAAAN,EAAA,GAKA,QAAAG,GAAAC,EAAAI,GACA,GAAAC,GAAAC,EAAAF,EACA,OAAA,wCAAAA,EAAA,SAAAC,EAAA,KAAAL,EAAA,YAIA,QAAAL,GAAAM,GACA,GAAAM,GAAA,EACA,IAAAN,EAAA,EACA,IAAA,GAAAxH,GAAA,EAAAwH,EAAAxH,EAAAA,IACA8H,GAAA,MAGA,OAAAA,GAIA,QAAAL,GAAAD,GACA,GAAAO,GAAA,EACA,IAAA,EAAAP,EACA,IAAA,GAAAxH,GAAA,GAAAwH,EAAAxH,EAAAA,IACA+H,GAAA,OAGA,OAAAA,GAGA,QAAAV,GAAAvI,GACA,GAAAd,GAAA,CAOA,OANAmB,GAAAC,KAAAN,EAAA,SAAAO,EAAAC,GACA,GAAA0I,GAAAtI,EAAAC,cAAAL,EACAtB,GAAAgK,IACAhK,EAAAgK,KAGAhK,EAGA,QAAAiK,KACA9I,EAAA,kBAAAzC,OAAA,EACAyC,EAAA,kBAAA+I,WAAAvB,SAEAxH,EAAA,QAAAsE,OAAA,kCAYA,QAAAoE,GAAAF,GACA,MAAAA,GAAA,WAvFA,GAAAjI,GAAAxD,EAAA,aA8EAiD,GAAAsD,UAAA2D,GAAA,QAAA,gBAAA,WACA,GAAAuB,GAAA,IAAAE,EAAA1I,EAAAgJ,MAAAD,SAAA,UAAAE,KAAA,MACAjJ,GAAAwI,GAAAtH,IAAA,cAAA,QACAlB,EAAA,gCAAAiH,GAAA,QAAA,WACAjH,EAAAwI,GAAAtH,IAAA,cAAA,QAQAzD,EAAAJ,SACA+G,OAAA0D,EACAzD,WAAAyE,KNmeGrH,aAAa,IAAIyH,GAAG,SAASnM,EAAQU,EAAOJ,GO/jB/C,GAAAmD,GAAA,SAAAb,GACA,MAAAwJ,UAAAxJ,EACAA,EAAAyJ,QAAAvL,QAAA,IAAA,IAAA,EAEA,KAIAJ,GAAAJ,SACAmD,cAAAA,aPwkBW","file":"donut-indent.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\nmodule.exports.darken = function(color, percentage) {\n  if((percentage - 0) < 0 || (percentage - 0) > 100) {\n    return null;\n  }\n  var rgb = splitRGB(color);\n  var hls = rgbToHls(rgb[0], rgb[1], rgb[2]);\n  var darkenRgb = hlsToRgb(hls.h, hls.l - percentage * 0.01, hls.s);\n  return rgbCode(darkenRgb.r, darkenRgb.g, darkenRgb.b)\n}\n\nfunction splitRGB(rgb) {\n  var rgbArray = [];\n  var rgb = rgb.replace(/^#/, \"\");\n  if(rgb.length == 6){\n    rgbArray = rgb.match(/.{2}/g).map(function (c) {\n      return parseInt(c, 16);\n    });\n  }else {\n    rgbArray = rgb.split('').map(function (c) {\n      return parseInt(c + c, 16);\n    });\n  }\n  return rgbArray;\n}\n\nfunction rgbCode(r, g, b){\n  return \"#\" + [r, g, b].map(function(el) {\n    return el.toString(16).replace(/^[0-9a-f]$/, \"0$&\");\n  }).join(\"\");\n}\n\nfunction rgbToHls(r, g, b) {\n  var h, // 0..360\n      l, s; // 0..1\n\n  // 0..1 に変換\n  r = r / 255;\n  g = g / 255;\n  b = b / 255;\n  var max = Math.max(Math.max(r, g), b),\n    min = Math.min(Math.min(r, g), b);\n\n  // hue の計算\n  if (max == min) {\n    h = 0; // 本来は定義されないが、仮に0を代入\n  } else if (max == r) {\n    h = 60 * (g - b) / (max - min) + 0;\n  } else if (max == g) {\n    h = (60 * (b - r) / (max - min)) + 120;\n  } else {\n    h = (60 * (r - g) / (max - min)) + 240;\n  }\n\n  while (h < 0) {\n    h += 360;\n  }\n\n  // Lightness の計算\n  l = (max + min) / 2;\n\n  // Saturation の計算\n  if (max == min) {\n    s = 0;\n  } else {\n    s = (l < 0.5)\n      ? (max - min) / (max + min)\n      : (max - min) / (2.0 - max - min);\n  }\n\n  return {'h': h, 'l': l, 's': s, 'type': 'HLS'};\n}\n\nfunction hlsToRgb(h, l, s) {\n  var r, g, b; // 0..255\n\n  while (h < 0) {\n    h += 360;\n  }\n  h = h % 360;\n\n  // 特別な場合 saturation = 0\n  if (s == 0) {\n    // → RGB は V に等しい\n    l = Math.round(l * 255);\n    return {'r': l, 'g': l, 'b': l, 'type': 'RGB'};\n  }\n\n  var m2 = (l < 0.5) ? l * (1 + s) : l + s - l * s,\n      m1 = l * 2 - m2,\n      tmp;\n\n  tmp = h + 120;\n  if (tmp > 360) {\n    tmp = tmp - 360\n  }\n\n  if (tmp < 60) {\n    r = (m1 + (m2 - m1) * tmp / 60);\n  } else if (tmp < 180) {\n    r = m2;\n  } else if (tmp < 240) {\n    r = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    r = m1;\n  }\n\n  tmp = h;\n  if (tmp < 60) {\n    g = m1 + (m2 - m1) * tmp / 60;\n  } else if (tmp < 180) {\n    g = m2;\n  } else if (tmp < 240) {\n    g = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    g = m1;\n  }\n\n  tmp = h - 120;\n  if (tmp < 0) {\n    tmp = tmp + 360\n  }\n  if (tmp < 60) {\n    b = m1 + (m2 - m1) * tmp / 60;\n  } else if (tmp < 180) {\n    b = m2;\n  } else if (tmp < 240) {\n    b = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    b = m1;\n  }\n\n  return {'r': Math.round(r * 255), 'g': Math.round(g * 255), 'b': Math.round(b * 255), 'type': 'RGB'};\n}\n\n},{}],2:[function(require,module,exports){\n/**\n * donut-indent\n * Copyright (c) 2016, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\n\"use strict\";\n\nvar HEADER_TAG_PREFIX = 'donut_indent_';\nvar utils = require('./utils.js');\n\nfunction createSequentialNo(hObject, headerTagNumbers) {\n  var initialTag = {};\n  headerTagNumbers.forEach(function(el) {\n    initialTag[el] = 0;\n  });\n\n  var sequentialNo = [];\n\n  $.each(hObject, function(index, value) {\n    var headers = $.extend(true, {}, initialTag);\n    if(index > 0) {\n      headers = $.extend(true, {}, sequentialNo[index - 1]);\n    }\n\n    var headerNumber = utils.headingNumber(value);\n\n    // set tagNumber\n    headers['headerNumber'] = headerNumber;\n\n    // count up\n    headers[headerNumber] += 1;\n\n    // reset\n    headerTagNumbers.forEach(function(el) {\n      if(el > headerNumber) {\n        headers[el] = 0;\n      }\n    });\n    sequentialNo.push(headers);\n  });\n  return sequentialNo;\n}\n\nfunction createPercentage(sequentialNo, headerTagNumbers) {\n  if(sequentialNo.length == 1) {\n    headerTagNumbers.forEach(function(e) {\n      if(e == sequentialNo[0][e]) {\n        sequentialNo[0][e] = 100;\n      } else {\n        sequentialNo[0][e] = 0;\n      }\n    });\n  }\n  // 進捗率に変換\n  for(var i = 1; i < sequentialNo.length; i++) {\n    // ヘッダ階層が浅くなった時(例: h3からh2へ移った時)\n    if(sequentialNo[i]['headerNumber'] < sequentialNo[i-1]['headerNumber']) {\n      var normalizeHeader = headerTagNumbers.filter(function(el) {\n        return (el > sequentialNo[i]['headerNumber']);\n      });\n\n      normalizeHeader.forEach(function(el) {\n        var max = sequentialNo[i-1][el];\n        for(var j = i - 1; j >= 0; j--) {\n          if(sequentialNo[j][el] == 0) {\n            break;\n          }\n          sequentialNo[j][el] = Math.round(sequentialNo[j][el] / max * 100);\n        }\n      });\n    }\n    // ラストのとき\n    // この時は全部の要素について規格化しちゃえばいい\n    if(i == (sequentialNo.length - 1)) {\n      headerTagNumbers.forEach(function(el) {\n        var max = sequentialNo[i][el];\n        for(var j = i; j >= 0; j--) {\n          if(sequentialNo[j][el] == 0) {\n            break;\n          }\n          sequentialNo[j][el] = Math.round(sequentialNo[j][el] / max * 100);\n        }\n      });\n    }\n  }\n  return sequentialNo;\n}\n\nfunction createID(hObject, headerTagNumbers) {\n  var tag = createPercentage(createSequentialNo(hObject, headerTagNumbers), headerTagNumbers);\n\n  // IDに変換(_で結合)\n  return tag.map(function(el) {\n    return HEADER_TAG_PREFIX + headerTagNumbers.map(function(e) {return el[e];}).join('_');\n  });\n}\n\nfunction getHeaderFontSize(headerNumber) {\n  return $(headerNumber + \":header\").css('fontSize').replace(\"px\", \"\") - 0;\n}\n\nfunction getHeaderLineHeight(headerNumber) {\n  return $(headerNumber + \":header\").css('line-height').replace(\"px\", \"\") - 0;\n}\n\nfunction calcIconHalfSize(fontSize) {\n  return Math.round(fontSize * 0.45);\n}\n\nfunction calcMarginTop(lineHeight, fontSize) {\n  return Math.round(fontSize * 0.05 + (lineHeight - fontSize) * 0.5);\n}\n\nfunction calcCenter(fontSize) {\n  return Math.round(fontSize * 0.45);\n}\n\nmodule.exports = {\n  createSequentialNo: createSequentialNo,\n  createPercentage: createPercentage,\n  createID: createID,\n  getHeaderFontSize: getHeaderFontSize,\n  getHeaderLineHeight: getHeaderLineHeight,\n  calcIconHalfSize: calcIconHalfSize,\n  calcMarginTop: calcMarginTop,\n  calcCenter: calcCenter\n};\n\n},{\"./utils.js\":6}],3:[function(require,module,exports){\n/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\n(function($){\n  \"use strict\";\n\n  var modal = require('./modal.js');\n  var utils = require('./utils.js');\n  var helper = require('./donut-indent-helper.js');\n\n  var DARKEN_PERCENTAGE_DIFF = 10;\n\n  function initializeCanvasSize(iconSize, marginTop, canvas) {\n    $(canvas).css('margin-top', marginTop);\n    $(canvas).css('margin-right', marginTop);\n    canvas.width = iconSize;\n    canvas.height = iconSize;\n  }\n\n  function renderDonut(radius, center, percentage, colorCode, canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var ninetyDegree = 1.5707963267948966; // 90*Math.PI/180;\n    var startRadian = -ninetyDegree;\n    var endRadian = ninetyDegree * (percentage * 0.04 - 1);\n    ctx.beginPath();\n    ctx.moveTo(center, center);\n    ctx.arc(center, center, radius, startRadian, endRadian, false);\n    ctx.fillStyle = colorCode;\n    ctx.fill();\n  }\n\n  function renderDonutIndent(canvasID) {\n    var indentArray = canvasID.replace(\"donut_indent_\", \"\").split(\"_\").map(function(el){\n      return el - 0;\n    });\n    var headerTag = \"h\" + indentArray.filter(function(el, index, array){return (el != 0);}).length;\n    var fontSize = helper.getHeaderFontSize(headerTag);\n    var lineHeight = helper.getHeaderLineHeight(headerTag);\n    var iconHalfSize = helper.calcIconHalfSize(fontSize);\n    var marginTop = helper.calcMarginTop(lineHeight, fontSize);\n    var center = helper.calcCenter(fontSize);\n    var canvas = document.getElementById(canvasID);\n\n    // canvasの設定\n    initializeCanvasSize(iconHalfSize * 2, marginTop, canvas);\n\n    // 外側の円から描画していく\n    indentArray.forEach(function(el, index, array) {\n      var radius = Math.round(iconHalfSize * DonutIndent.radiusRatio[index]);\n      // 100%の円\n      renderDonut(radius - 1, center, 100, \"#fff\", canvas);\n      // 扇型\n      renderDonut(radius, center, el, DonutIndent.color[index], canvas);\n    });\n  }\n\n  // ヘッダの先頭にcanvasを挿入\n  function appendCanvas(hObject, headerIDs) {\n    $.each(hObject, function(index, value) {\n      $(value).wrap('<div></div>');\n      var canvasHTML = '<div class=\"donut-indent\" style=\"float:left;\"><canvas id=\"' + headerIDs[index] + '\"></div>';\n      $(value).before(canvasHTML);\n    });\n  }\n\n  function appendDonutIndent() {\n    var hObject = $(\":header\").filter(function(index, el){return (utils.headingNumber(el) <= DonutIndent.settings.indentDepth)});\n    var headerIDs = helper.createID(hObject, DonutIndent.headerTagNumbers);\n    appendCanvas(hObject,headerIDs);\n    headerIDs.forEach(function(el) {\n      renderDonutIndent(el);\n    });\n    var overlayContent = require('./overlay-content.js');\n    var content = overlayContent.create(hObject, headerIDs);\n    overlayContent.initialize();\n    $('#modal-content').append(content);\n  }\n\n  var DonutIndent = {};\n\n  DonutIndent = {\n    defaults: {\n      indentDepth: 3,\n      color: \"#59bb0c\",\n      gammaValue: 1.8\n    },\n\n    settings: $.extend(true, {}, DonutIndent.defaults),\n\n    init: function(options) {\n      var color = require('./color.js');\n      DonutIndent.settings = $.extend(DonutIndent.defaults, options);\n      DonutIndent.headerTagNumbers = Array.apply(null, Array(DonutIndent.settings.indentDepth)).map(function (_, i) {return i+1;});\n      DonutIndent.radiusRatio = $.extend(true, [], DonutIndent.headerTagNumbers).reverse().map(function(el) {\n        return Math.pow(1.0 * el / DonutIndent.headerTagNumbers.length, 1 / DonutIndent.settings.gammaValue);\n      });\n      DonutIndent.color = DonutIndent.headerTagNumbers.map(function(el) {\n        return color.darken(DonutIndent.settings.color, DARKEN_PERCENTAGE_DIFF * (el - 1));\n      });\n    }\n  };\n\n  // export\n  $.donutIndent = function(options){\n    DonutIndent.init(options);\n    appendDonutIndent();\n  }\n\n})(jQuery);\n\n// べた書きのHTMLを書き換えるために読み込み時にも実行\n$.donutIndent();\n\n},{\"./color.js\":1,\"./donut-indent-helper.js\":2,\"./modal.js\":4,\"./overlay-content.js\":5,\"./utils.js\":6}],4:[function(require,module,exports){\n/**\n * donut-indent\n * Copyright (c) 2016, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\n// リファレンス\n// https://syncer.jp/jquery-modal-window\n// http://coolwebwindow.com/jquery-lab/archives/352\n\n\n// 新たに生成した要素でjQueryイベントが有効にならないので\n// documentに対してクリックイベントを登録する。ただしパフォーマンスは低下。\n// $(\".donut-indent\").on('click', function() {\n$(document).on('click',\".donut-indent\", function() {\n  // html、bodyを固定（cssでoverflow:hiddenにする)\n  $('html, body').addClass('lock');\n\n  //新しくモーダルウィンドウを起動しない\n  if($(\"#modal-overlay\").length > 0) return false;\n\n  //オーバーレイ用のHTMLコードを、[body]内の最後に生成する\n  $(\"body\").append('<div id=\"modal-overlay\"></div>');\n\n  //[$modal-overlay]をフェードインさせる\n  $(\"#modal-overlay\").fadeIn(\"slow\");\n\n  $('#modal-content').wrap(\"<div id='modal-wrap'></div>\");\n  $('#modal-wrap').show();\n\n  //コンテンツをセンタリングする\n  centeringModalSyncer();\n\n  //[$modal-content]をフェードインさせる\n  $(\"#modal-content\").fadeIn(\"slow\");\n\n  $(\"#modal-wrap, .overlay_anchor\").off().on('click', function() {\n    //[#modal-overlay]と[#modal-close]をフェードアウトする\n    $(\"#modal-content,#modal-overlay\").fadeOut(\"slow\",function() {\n      // html、bodyの固定解除\n      $('html, body').removeClass('lock');\n      //フェードアウト後、[#modal-overlay]をHTML(DOM)上から削除\n      $(\"#modal-overlay\").remove();\n      $(\"#modal-content\").unwrap(\"<div id='modal-wrap'></div>\");\n    });\n  });\n});\n\n//センタリングをする関数\nfunction centeringModalSyncer() {\n  var w = $(window).width();\n  var h = $(window).height();\n  var cw = $(\"#modal-content\").outerWidth();\n  var ch = $(\"#modal-content\").outerHeight();\n\n  var scrollSize = getScrollBarWidth();\n  var position = getModalPosition(scrollSize, cw, w, ch, h);\n  $('#modal-content').css({'left': position.x + 'px','top': position.y + 'px'});\n}\n\n// 最近のブラウザのスクロールバーは非表示なので大抵ゼロですけどね。。\nfunction getScrollBarWidth() {\n  $('html').append('<div class=\"scrollbar\" style=\"overflow:scroll;\"></div>');\n  var scrollsize = window.innerWidth - $('.scrollbar').prop('clientWidth');\n  $('.scrollbar').hide();\n  return scrollsize;\n}\n\nfunction getModalPosition(scrollSize, contentWidth, windowWidth, contentHeight, windowHeight) {\n  var diffX = contentWidth - windowWidth;\n  var diffY = contentHeight - windowHeight;\n  if(diffX > 0 && diffY > 0) {\n    return {x:0, y:0};\n  } else if(diffX < 0 && diffY > 0) {\n    return {x:(-diffX - scrollSize)/2, y:0};\n  } else if(diffX > 0 && diffY < 0) {\n    return {x:0, y:(-diffY - scrollSize)/2};\n  } else {\n    return {x:-diffX/2, y:-diffY/2};\n  }\n}\n\n//リサイズされたら、センタリングをする関数[centeringModalSyncer()]を実行する\n$(window).resize(centeringModalSyncer);\n\nmodule.exports = {\n  _getScrollBarWidth: getScrollBarWidth,\n  _getModalPosition: getModalPosition\n};\n\n},{}],5:[function(require,module,exports){\n/**\n * donut-indent\n * Copyright (c) 2016, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\nvar utils = require('./utils.js');\n\nfunction ulElement(hObject, headerIDs) {\n  var content = braUl(1);\n  var ulCount = 0;\n\n  // pre(最初の要素のヘッダーインデントが最小とは限らない)\n  var preHeadingDiff = utils.headingNumber(hObject[0]) - minHeadingNumber(hObject);\n  content += braUl(preHeadingDiff);\n  ulCount += preHeadingDiff;\n\n  // main\n  for(var i = 0; i < hObject.length - 1; i++) {\n    var value = hObject[i];\n    content += listElement($(value).text(), headerIDs[i]);\n\n    var headingDiff = utils.headingNumber(hObject[i+1]) - utils.headingNumber(hObject[i]);\n    content += braUl(headingDiff);\n    content += ketUl(headingDiff);\n\n    ulCount += headingDiff;\n  }\n\n  var lastValue = hObject[hObject.length - 1];\n  content += listElement($(lastValue).text(), headerIDs[hObject.length - 1]);\n\n  // post\n  content += ketUl(-ulCount - 1);\n\n  return content;\n}\n\nfunction listElement(text, id) {\n  var anchorID = toOverlayAnchorID(id);\n  return '<li>' + '<a class=\"overlay_anchor\" href=\"#' + id + '\" id=\"' + anchorID + '\">' + text + '</a>' + '</li>'\n}\n\n// header numberが減った時は<ul>を増やす\nfunction braUl(headingDiff){\n  var bra = '';\n  if(headingDiff > 0){\n    for(var j = 0; j < headingDiff; j++) {\n      bra += '<ul>';\n    }\n  }\n  return bra;\n}\n\n// header numberが増えた時は</ul>を増やす\nfunction ketUl(headingDiff){\n  var ket = '';\n  if(headingDiff < 0){\n    for(var j = 0; j < -headingDiff; j++) {\n      ket += '</ul>';\n    }\n  }\n  return ket;\n}\n\nfunction minHeadingNumber(hObject) {\n  var min = 6;\n  $.each(hObject, function(index, value) {\n    var hNo = utils.headingNumber(value);\n    if(hNo < min) {\n      min = hNo;\n    }\n  });\n  return min;\n}\n\nfunction initializeOverlayContent() {\n  if($('#modal-content').length > 0) {\n    $('#modal-content').children().remove();\n  } else {\n    $('body').append('<div id=\"modal-content\"></div>');\n  }\n}\n\n$(document).on('click',\".donut-indent\", function() {\n  var id = \"#\" + toOverlayAnchorID($(this).children(\"canvas\").attr(\"id\"));\n  $(id).css(\"font-weight\", \"bold\");\n  $(\"#modal-wrap, .overlay_anchor\").on('click', function() {\n    $(id).css(\"font-weight\", \"\");\n  });\n});\n\nfunction toOverlayAnchorID(id) {\n  return id + \"_overlay\";\n}\n\nmodule.exports = {\n  create: ulElement,\n  initialize: initializeOverlayContent\n}\n\n},{\"./utils.js\":6}],6:[function(require,module,exports){\n/**\n * donut-indent\n * Copyright (c) 2016, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\nvar headingNumber = function(hObject){\n  if(hObject !== undefined) {\n    return hObject.tagName.replace('H', '') - 0;\n  }else {\n    return null;\n  }\n} \n\nmodule.exports = {\n  headingNumber: headingNumber\n}\n\n},{}]},{},[3])\n\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\nmodule.exports.darken = function(color, percentage) {\n  if((percentage - 0) < 0 || (percentage - 0) > 100) {\n    return null;\n  }\n  var rgb = splitRGB(color);\n  var hls = rgbToHls(rgb[0], rgb[1], rgb[2]);\n  var darkenRgb = hlsToRgb(hls.h, hls.l - percentage * 0.01, hls.s);\n  return rgbCode(darkenRgb.r, darkenRgb.g, darkenRgb.b)\n}\n\nfunction splitRGB(rgb) {\n  var rgbArray = [];\n  var rgb = rgb.replace(/^#/, \"\");\n  if(rgb.length == 6){\n    rgbArray = rgb.match(/.{2}/g).map(function (c) {\n      return parseInt(c, 16);\n    });\n  }else {\n    rgbArray = rgb.split('').map(function (c) {\n      return parseInt(c + c, 16);\n    });\n  }\n  return rgbArray;\n}\n\nfunction rgbCode(r, g, b){\n  return \"#\" + [r, g, b].map(function(el) {\n    return el.toString(16).replace(/^[0-9a-f]$/, \"0$&\");\n  }).join(\"\");\n}\n\nfunction rgbToHls(r, g, b) {\n  var h, // 0..360\n      l, s; // 0..1\n\n  // 0..1 に変換\n  r = r / 255;\n  g = g / 255;\n  b = b / 255;\n  var max = Math.max(Math.max(r, g), b),\n    min = Math.min(Math.min(r, g), b);\n\n  // hue の計算\n  if (max == min) {\n    h = 0; // 本来は定義されないが、仮に0を代入\n  } else if (max == r) {\n    h = 60 * (g - b) / (max - min) + 0;\n  } else if (max == g) {\n    h = (60 * (b - r) / (max - min)) + 120;\n  } else {\n    h = (60 * (r - g) / (max - min)) + 240;\n  }\n\n  while (h < 0) {\n    h += 360;\n  }\n\n  // Lightness の計算\n  l = (max + min) / 2;\n\n  // Saturation の計算\n  if (max == min) {\n    s = 0;\n  } else {\n    s = (l < 0.5)\n      ? (max - min) / (max + min)\n      : (max - min) / (2.0 - max - min);\n  }\n\n  return {'h': h, 'l': l, 's': s, 'type': 'HLS'};\n}\n\nfunction hlsToRgb(h, l, s) {\n  var r, g, b; // 0..255\n\n  while (h < 0) {\n    h += 360;\n  }\n  h = h % 360;\n\n  // 特別な場合 saturation = 0\n  if (s == 0) {\n    // → RGB は V に等しい\n    l = Math.round(l * 255);\n    return {'r': l, 'g': l, 'b': l, 'type': 'RGB'};\n  }\n\n  var m2 = (l < 0.5) ? l * (1 + s) : l + s - l * s,\n      m1 = l * 2 - m2,\n      tmp;\n\n  tmp = h + 120;\n  if (tmp > 360) {\n    tmp = tmp - 360\n  }\n\n  if (tmp < 60) {\n    r = (m1 + (m2 - m1) * tmp / 60);\n  } else if (tmp < 180) {\n    r = m2;\n  } else if (tmp < 240) {\n    r = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    r = m1;\n  }\n\n  tmp = h;\n  if (tmp < 60) {\n    g = m1 + (m2 - m1) * tmp / 60;\n  } else if (tmp < 180) {\n    g = m2;\n  } else if (tmp < 240) {\n    g = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    g = m1;\n  }\n\n  tmp = h - 120;\n  if (tmp < 0) {\n    tmp = tmp + 360\n  }\n  if (tmp < 60) {\n    b = m1 + (m2 - m1) * tmp / 60;\n  } else if (tmp < 180) {\n    b = m2;\n  } else if (tmp < 240) {\n    b = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    b = m1;\n  }\n\n  return {'r': Math.round(r * 255), 'g': Math.round(g * 255), 'b': Math.round(b * 255), 'type': 'RGB'};\n}\n","/**\n * donut-indent\n * Copyright (c) 2016, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\n\"use strict\";\n\nvar HEADER_TAG_PREFIX = 'donut_indent_';\nvar utils = require('./utils.js');\n\nfunction createSequentialNo(hObject, headerTagNumbers) {\n  var initialTag = {};\n  headerTagNumbers.forEach(function(el) {\n    initialTag[el] = 0;\n  });\n\n  var sequentialNo = [];\n\n  $.each(hObject, function(index, value) {\n    var headers = $.extend(true, {}, initialTag);\n    if(index > 0) {\n      headers = $.extend(true, {}, sequentialNo[index - 1]);\n    }\n\n    var headerNumber = utils.headingNumber(value);\n\n    // set tagNumber\n    headers['headerNumber'] = headerNumber;\n\n    // count up\n    headers[headerNumber] += 1;\n\n    // reset\n    headerTagNumbers.forEach(function(el) {\n      if(el > headerNumber) {\n        headers[el] = 0;\n      }\n    });\n    sequentialNo.push(headers);\n  });\n  return sequentialNo;\n}\n\nfunction createPercentage(sequentialNo, headerTagNumbers) {\n  if(sequentialNo.length == 1) {\n    headerTagNumbers.forEach(function(e) {\n      if(e == sequentialNo[0][e]) {\n        sequentialNo[0][e] = 100;\n      } else {\n        sequentialNo[0][e] = 0;\n      }\n    });\n  }\n  // 進捗率に変換\n  for(var i = 1; i < sequentialNo.length; i++) {\n    // ヘッダ階層が浅くなった時(例: h3からh2へ移った時)\n    if(sequentialNo[i]['headerNumber'] < sequentialNo[i-1]['headerNumber']) {\n      var normalizeHeader = headerTagNumbers.filter(function(el) {\n        return (el > sequentialNo[i]['headerNumber']);\n      });\n\n      normalizeHeader.forEach(function(el) {\n        var max = sequentialNo[i-1][el];\n        for(var j = i - 1; j >= 0; j--) {\n          if(sequentialNo[j][el] == 0) {\n            break;\n          }\n          sequentialNo[j][el] = Math.round(sequentialNo[j][el] / max * 100);\n        }\n      });\n    }\n    // ラストのとき\n    // この時は全部の要素について規格化しちゃえばいい\n    if(i == (sequentialNo.length - 1)) {\n      headerTagNumbers.forEach(function(el) {\n        var max = sequentialNo[i][el];\n        for(var j = i; j >= 0; j--) {\n          if(sequentialNo[j][el] == 0) {\n            break;\n          }\n          sequentialNo[j][el] = Math.round(sequentialNo[j][el] / max * 100);\n        }\n      });\n    }\n  }\n  return sequentialNo;\n}\n\nfunction createID(hObject, headerTagNumbers) {\n  var tag = createPercentage(createSequentialNo(hObject, headerTagNumbers), headerTagNumbers);\n\n  // IDに変換(_で結合)\n  return tag.map(function(el) {\n    return HEADER_TAG_PREFIX + headerTagNumbers.map(function(e) {return el[e];}).join('_');\n  });\n}\n\nfunction getHeaderFontSize(headerNumber) {\n  return $(headerNumber + \":header\").css('fontSize').replace(\"px\", \"\") - 0;\n}\n\nfunction getHeaderLineHeight(headerNumber) {\n  return $(headerNumber + \":header\").css('line-height').replace(\"px\", \"\") - 0;\n}\n\nfunction calcIconHalfSize(fontSize) {\n  return Math.round(fontSize * 0.45);\n}\n\nfunction calcMarginTop(lineHeight, fontSize) {\n  return Math.round(fontSize * 0.05 + (lineHeight - fontSize) * 0.5);\n}\n\nfunction calcCenter(fontSize) {\n  return Math.round(fontSize * 0.45);\n}\n\nmodule.exports = {\n  createSequentialNo: createSequentialNo,\n  createPercentage: createPercentage,\n  createID: createID,\n  getHeaderFontSize: getHeaderFontSize,\n  getHeaderLineHeight: getHeaderLineHeight,\n  calcIconHalfSize: calcIconHalfSize,\n  calcMarginTop: calcMarginTop,\n  calcCenter: calcCenter\n};\n","/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\n(function($){\n  \"use strict\";\n\n  var modal = require('./modal.js');\n  var utils = require('./utils.js');\n  var helper = require('./donut-indent-helper.js');\n\n  var DARKEN_PERCENTAGE_DIFF = 10;\n\n  function initializeCanvasSize(iconSize, marginTop, canvas) {\n    $(canvas).css('margin-top', marginTop);\n    $(canvas).css('margin-right', marginTop);\n    canvas.width = iconSize;\n    canvas.height = iconSize;\n  }\n\n  function renderDonut(radius, center, percentage, colorCode, canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var ninetyDegree = 1.5707963267948966; // 90*Math.PI/180;\n    var startRadian = -ninetyDegree;\n    var endRadian = ninetyDegree * (percentage * 0.04 - 1);\n    ctx.beginPath();\n    ctx.moveTo(center, center);\n    ctx.arc(center, center, radius, startRadian, endRadian, false);\n    ctx.fillStyle = colorCode;\n    ctx.fill();\n  }\n\n  function renderDonutIndent(canvasID) {\n    var indentArray = canvasID.replace(\"donut_indent_\", \"\").split(\"_\").map(function(el){\n      return el - 0;\n    });\n    var headerTag = \"h\" + indentArray.filter(function(el, index, array){return (el != 0);}).length;\n    var fontSize = helper.getHeaderFontSize(headerTag);\n    var lineHeight = helper.getHeaderLineHeight(headerTag);\n    var iconHalfSize = helper.calcIconHalfSize(fontSize);\n    var marginTop = helper.calcMarginTop(lineHeight, fontSize);\n    var center = helper.calcCenter(fontSize);\n    var canvas = document.getElementById(canvasID);\n\n    // canvasの設定\n    initializeCanvasSize(iconHalfSize * 2, marginTop, canvas);\n\n    // 外側の円から描画していく\n    indentArray.forEach(function(el, index, array) {\n      var radius = Math.round(iconHalfSize * DonutIndent.radiusRatio[index]);\n      // 100%の円\n      renderDonut(radius - 1, center, 100, \"#fff\", canvas);\n      // 扇型\n      renderDonut(radius, center, el, DonutIndent.color[index], canvas);\n    });\n  }\n\n  // ヘッダの先頭にcanvasを挿入\n  function appendCanvas(hObject, headerIDs) {\n    $.each(hObject, function(index, value) {\n      $(value).wrap('<div></div>');\n      var canvasHTML = '<div class=\"donut-indent\" style=\"float:left;\"><canvas id=\"' + headerIDs[index] + '\"></div>';\n      $(value).before(canvasHTML);\n    });\n  }\n\n  function appendDonutIndent() {\n    var hObject = $(\":header\").filter(function(index, el){return (utils.headingNumber(el) <= DonutIndent.settings.indentDepth)});\n    var headerIDs = helper.createID(hObject, DonutIndent.headerTagNumbers);\n    appendCanvas(hObject,headerIDs);\n    headerIDs.forEach(function(el) {\n      renderDonutIndent(el);\n    });\n    var overlayContent = require('./overlay-content.js');\n    var content = overlayContent.create(hObject, headerIDs);\n    overlayContent.initialize();\n    $('#modal-content').append(content);\n  }\n\n  var DonutIndent = {};\n\n  DonutIndent = {\n    defaults: {\n      indentDepth: 3,\n      color: \"#59bb0c\",\n      gammaValue: 1.8\n    },\n\n    settings: $.extend(true, {}, DonutIndent.defaults),\n\n    init: function(options) {\n      var color = require('./color.js');\n      DonutIndent.settings = $.extend(DonutIndent.defaults, options);\n      DonutIndent.headerTagNumbers = Array.apply(null, Array(DonutIndent.settings.indentDepth)).map(function (_, i) {return i+1;});\n      DonutIndent.radiusRatio = $.extend(true, [], DonutIndent.headerTagNumbers).reverse().map(function(el) {\n        return Math.pow(1.0 * el / DonutIndent.headerTagNumbers.length, 1 / DonutIndent.settings.gammaValue);\n      });\n      DonutIndent.color = DonutIndent.headerTagNumbers.map(function(el) {\n        return color.darken(DonutIndent.settings.color, DARKEN_PERCENTAGE_DIFF * (el - 1));\n      });\n    }\n  };\n\n  // export\n  $.donutIndent = function(options){\n    DonutIndent.init(options);\n    appendDonutIndent();\n  }\n\n})(jQuery);\n\n// べた書きのHTMLを書き換えるために読み込み時にも実行\n$.donutIndent();\n","/**\n * donut-indent\n * Copyright (c) 2016, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\n// リファレンス\n// https://syncer.jp/jquery-modal-window\n// http://coolwebwindow.com/jquery-lab/archives/352\n\n\n// 新たに生成した要素でjQueryイベントが有効にならないので\n// documentに対してクリックイベントを登録する。ただしパフォーマンスは低下。\n// $(\".donut-indent\").on('click', function() {\n$(document).on('click',\".donut-indent\", function() {\n  // html、bodyを固定（cssでoverflow:hiddenにする)\n  $('html, body').addClass('lock');\n\n  //新しくモーダルウィンドウを起動しない\n  if($(\"#modal-overlay\").length > 0) return false;\n\n  //オーバーレイ用のHTMLコードを、[body]内の最後に生成する\n  $(\"body\").append('<div id=\"modal-overlay\"></div>');\n\n  //[$modal-overlay]をフェードインさせる\n  $(\"#modal-overlay\").fadeIn(\"slow\");\n\n  $('#modal-content').wrap(\"<div id='modal-wrap'></div>\");\n  $('#modal-wrap').show();\n\n  //コンテンツをセンタリングする\n  centeringModalSyncer();\n\n  //[$modal-content]をフェードインさせる\n  $(\"#modal-content\").fadeIn(\"slow\");\n\n  $(\"#modal-wrap, .overlay_anchor\").off().on('click', function() {\n    //[#modal-overlay]と[#modal-close]をフェードアウトする\n    $(\"#modal-content,#modal-overlay\").fadeOut(\"slow\",function() {\n      // html、bodyの固定解除\n      $('html, body').removeClass('lock');\n      //フェードアウト後、[#modal-overlay]をHTML(DOM)上から削除\n      $(\"#modal-overlay\").remove();\n      $(\"#modal-content\").unwrap(\"<div id='modal-wrap'></div>\");\n    });\n  });\n});\n\n//センタリングをする関数\nfunction centeringModalSyncer() {\n  var w = $(window).width();\n  var h = $(window).height();\n  var cw = $(\"#modal-content\").outerWidth();\n  var ch = $(\"#modal-content\").outerHeight();\n\n  var scrollSize = getScrollBarWidth();\n  var position = getModalPosition(scrollSize, cw, w, ch, h);\n  $('#modal-content').css({'left': position.x + 'px','top': position.y + 'px'});\n}\n\n// 最近のブラウザのスクロールバーは非表示なので大抵ゼロですけどね。。\nfunction getScrollBarWidth() {\n  $('html').append('<div class=\"scrollbar\" style=\"overflow:scroll;\"></div>');\n  var scrollsize = window.innerWidth - $('.scrollbar').prop('clientWidth');\n  $('.scrollbar').hide();\n  return scrollsize;\n}\n\nfunction getModalPosition(scrollSize, contentWidth, windowWidth, contentHeight, windowHeight) {\n  var diffX = contentWidth - windowWidth;\n  var diffY = contentHeight - windowHeight;\n  if(diffX > 0 && diffY > 0) {\n    return {x:0, y:0};\n  } else if(diffX < 0 && diffY > 0) {\n    return {x:(-diffX - scrollSize)/2, y:0};\n  } else if(diffX > 0 && diffY < 0) {\n    return {x:0, y:(-diffY - scrollSize)/2};\n  } else {\n    return {x:-diffX/2, y:-diffY/2};\n  }\n}\n\n//リサイズされたら、センタリングをする関数[centeringModalSyncer()]を実行する\n$(window).resize(centeringModalSyncer);\n\nmodule.exports = {\n  _getScrollBarWidth: getScrollBarWidth,\n  _getModalPosition: getModalPosition\n};\n","/**\n * donut-indent\n * Copyright (c) 2016, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\nvar utils = require('./utils.js');\n\nfunction ulElement(hObject, headerIDs) {\n  var content = braUl(1);\n  var ulCount = 0;\n\n  // pre(最初の要素のヘッダーインデントが最小とは限らない)\n  var preHeadingDiff = utils.headingNumber(hObject[0]) - minHeadingNumber(hObject);\n  content += braUl(preHeadingDiff);\n  ulCount += preHeadingDiff;\n\n  // main\n  for(var i = 0; i < hObject.length - 1; i++) {\n    var value = hObject[i];\n    content += listElement($(value).text(), headerIDs[i]);\n\n    var headingDiff = utils.headingNumber(hObject[i+1]) - utils.headingNumber(hObject[i]);\n    content += braUl(headingDiff);\n    content += ketUl(headingDiff);\n\n    ulCount += headingDiff;\n  }\n\n  var lastValue = hObject[hObject.length - 1];\n  content += listElement($(lastValue).text(), headerIDs[hObject.length - 1]);\n\n  // post\n  content += ketUl(-ulCount - 1);\n\n  return content;\n}\n\nfunction listElement(text, id) {\n  var anchorID = toOverlayAnchorID(id);\n  return '<li>' + '<a class=\"overlay_anchor\" href=\"#' + id + '\" id=\"' + anchorID + '\">' + text + '</a>' + '</li>'\n}\n\n// header numberが減った時は<ul>を増やす\nfunction braUl(headingDiff){\n  var bra = '';\n  if(headingDiff > 0){\n    for(var j = 0; j < headingDiff; j++) {\n      bra += '<ul>';\n    }\n  }\n  return bra;\n}\n\n// header numberが増えた時は</ul>を増やす\nfunction ketUl(headingDiff){\n  var ket = '';\n  if(headingDiff < 0){\n    for(var j = 0; j < -headingDiff; j++) {\n      ket += '</ul>';\n    }\n  }\n  return ket;\n}\n\nfunction minHeadingNumber(hObject) {\n  var min = 6;\n  $.each(hObject, function(index, value) {\n    var hNo = utils.headingNumber(value);\n    if(hNo < min) {\n      min = hNo;\n    }\n  });\n  return min;\n}\n\nfunction initializeOverlayContent() {\n  if($('#modal-content').length > 0) {\n    $('#modal-content').children().remove();\n  } else {\n    $('body').append('<div id=\"modal-content\"></div>');\n  }\n}\n\n$(document).on('click',\".donut-indent\", function() {\n  var id = \"#\" + toOverlayAnchorID($(this).children(\"canvas\").attr(\"id\"));\n  $(id).css(\"font-weight\", \"bold\");\n  $(\"#modal-wrap, .overlay_anchor\").on('click', function() {\n    $(id).css(\"font-weight\", \"\");\n  });\n});\n\nfunction toOverlayAnchorID(id) {\n  return id + \"_overlay\";\n}\n\nmodule.exports = {\n  create: ulElement,\n  initialize: initializeOverlayContent\n}\n","/**\n * donut-indent\n * Copyright (c) 2016, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\nvar headingNumber = function(hObject){\n  if(hObject !== undefined) {\n    return hObject.tagName.replace('H', '') - 0;\n  }else {\n    return null;\n  }\n} \n\nmodule.exports = {\n  headingNumber: headingNumber\n}\n"],"sourceRoot":"/source/"}