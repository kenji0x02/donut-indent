{"version":3,"sources":["donut-indent.min.js","node_modules/browser-pack/_prelude.js","lib/color.js","lib/donut-indent.js","lib/modal.js","lib/overlay-content.js","lib/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","splitRGB","rgb","rgbArray","replace","match","map","c","parseInt","split","rgbCode","g","b","el","toString","join","rgbToHls","h","max","Math","min","type","hlsToRgb","round","tmp","m2","m1","darken","color","percentage","hls","darkenRgb",2,"$","getHeaderFontSize","headerNumber","css","getHeaderLineHeight","calcIconHalfSize","fontSize","calcMarginTop","lineHeight","calcCenter","initializeCanvasSize","iconSize","marginTop","canvas","width","height","renderDonut","redius","center","colorCode","ctx","getContext","ninetyDegree","startRadian","endRadian","beginPath","moveTo","arc","fillStyle","fill","renderDonutIndent","canvasID","indentArray","headerTag","filter","index","array","iconHalfSize","document","getElementById","forEach","radius","DonutIndent","radiusRatio","createSequentilNo","hObject","initialTag","headerTagNumbers","sequentialNo","each","value","headers","extend","utils","headingNumber","push","createPercentage","normalizeHeder","j","createID","tag","HEADER_TAG_PREFIX","appendCanvas","headerIDs","wrap","canvasHTML","before","appendDonutIndent","settings","indentDepth","overlayContent","content","create","initialize","append","DARKEN_PERCENTAGE_DIFF","defaults","gammmaValue","init","options","Array","apply","_","reverse","pow","donutIndent","jQuery","./color.js","./modal.js","./overlay-content.js","./utils.js",3,"centeringModalSyncer","w","window","cw","outerWidth","ch","outerHeight","left","top","x","scrollsize","y","innerWidth","prop","hide","on","addClass","fadeIn","show","off","fadeOut","removeClass","remove","unwrap","resize",4,"ulElement","braUl","ulCount","preHeadingDiff","minHeadingNumber","listElement","text","headingDiff","ketUl","lastValue","id","anchorID","toOverlayAnchorID","bra","ket","hNo","initializeOverlayContent","children","this","attr",5,"undefined","tagName"],"mappings":"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","file":"donut-indent.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\nmodule.exports.darken = function(color, percentage) {\n  var rgb = splitRGB(color);\n  var hls = rgbToHls(rgb[0], rgb[1], rgb[2]);\n  var darkenRgb = hlsToRgb(hls.h, hls.l - percentage * 0.01, hls.s);\n  return rgbCode(darkenRgb.r, darkenRgb.g, darkenRgb.b)\n}\n\nfunction splitRGB(rgb) {\n  var rgbArray = [];\n  var rgb = rgb.replace(/^#/, \"\");\n  if(rgb.length == 6){\n    rgbArray = rgb.match(/.{2}/g).map(function (c) {\n      return parseInt(c, 16);\n    });\n  }else {\n    rgbArray = rgb.split('').map(function (c) {\n      return parseInt(c + c, 16);\n    });\n  }\n  return rgbArray;\n}\n\nfunction rgbCode(r, g, b){\n  return \"#\" + [r, g, b].map(function(el) {\n    return el.toString(16).replace(/^[0-9a-f]$/, \"0$&\");\n  }).join(\"\");\n}\n\nfunction rgbToHls(r, g, b) {\n  var h, // 0..360\n      l, s; // 0..1\n\n  // 0..1 に変換\n  r = r / 255;\n  g = g / 255;\n  b = b / 255;\n  var max = Math.max(Math.max(r, g), b),\n    min = Math.min(Math.min(r, g), b);\n\n  // hue の計算\n  if (max == min) {\n    h = 0; // 本来は定義されないが、仮に0を代入\n  } else if (max == r) {\n    h = 60 * (g - b) / (max - min) + 0;\n  } else if (max == g) {\n    h = (60 * (b - r) / (max - min)) + 120;\n  } else {\n    h = (60 * (r - g) / (max - min)) + 240;\n  }\n\n  while (h < 0) {\n    h += 360;\n  }\n\n  // Lightness の計算\n  l = (max + min) / 2;\n\n  // Saturation の計算\n  if (max == min) {\n    s = 0;\n  } else {\n    s = (l < 0.5)\n      ? (max - min) / (max + min)\n      : (max - min) / (2.0 - max - min);\n  }\n\n  return {'h': h, 'l': l, 's': s, 'type': 'HLS'};\n}\n\nfunction hlsToRgb(h, l, s) {\n  var r, g, b; // 0..255\n\n  while (h < 0) {\n    h += 360;\n  }\n  h = h % 360;\n\n  // 特別な場合 saturation = 0\n  if (s == 0) {\n    // → RGB は V に等しい\n    l = Math.round(l * 255);\n    return {'r': l, 'g': l, 'b': l, 'type': 'RGB'};\n  }\n\n  var m2 = (l < 0.5) ? l * (1 + s) : l + s - l * s,\n      m1 = l * 2 - m2,\n      tmp;\n\n  tmp = h + 120;\n  if (tmp > 360) {\n    tmp = tmp - 360\n  }\n\n  if (tmp < 60) {\n    r = (m1 + (m2 - m1) * tmp / 60);\n  } else if (tmp < 180) {\n    r = m2;\n  } else if (tmp < 240) {\n    r = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    r = m1;\n  }\n\n  tmp = h;\n  if (tmp < 60) {\n    g = m1 + (m2 - m1) * tmp / 60;\n  } else if (tmp < 180) {\n    g = m2;\n  } else if (tmp < 240) {\n    g = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    g = m1;\n  }\n\n  tmp = h - 120;\n  if (tmp < 0) {\n    tmp = tmp + 360\n  }\n  if (tmp < 60) {\n    b = m1 + (m2 - m1) * tmp / 60;\n  } else if (tmp < 180) {\n    b = m2;\n  } else if (tmp < 240) {\n    b = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    b = m1;\n  }\n\n  return {'r': Math.round(r * 255), 'g': Math.round(g * 255), 'b': Math.round(b * 255), 'type': 'RGB'};\n}\n\n},{}],2:[function(require,module,exports){\n/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\n(function($){\n  \"use strict\";\n\n  var modal = require('./modal.js');\n  var utils = require('./utils.js');\n\n  var DARKEN_PERCENTAGE_DIFF = 10;\n  var HEADER_TAG_PREFIX = 'donut_indent_';\n\n  function getHeaderFontSize(headerNumber) {\n    return $(headerNumber + \":header\").css('fontSize').replace(\"px\", \"\") - 0;\n  }\n\n  function getHeaderLineHeight(headerNumber) {\n    return $(headerNumber + \":header\").css('line-height').replace(\"px\", \"\") - 0;\n  }\n\n  function calcIconHalfSize(fontSize) {\n    return Math.round(fontSize * 0.45);\n  }\n\n  function calcMarginTop(lineHeight, fontSize) {\n    return Math.round(fontSize * 0.05 + (lineHeight - fontSize) * 0.5);\n  }\n\n  function calcCenter(fontSize) {\n    return Math.round(fontSize * 0.45);\n  }\n\n  function initializeCanvasSize(iconSize, marginTop, canvas) {\n    $(canvas).css('margin-top', marginTop)\n    $(canvas).css('margin-right', marginTop)\n    canvas.width = iconSize;\n    canvas.height = iconSize;\n  }\n\n  function renderDonut(redius, center, percentage, colorCode, canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var ninetyDegree = 1.5707963267948966; // 90*Math.PI/180;\n    var startRadian = -ninetyDegree;\n    var endRadian = ninetyDegree * (percentage * 0.04 - 1);\n    ctx.beginPath();\n    ctx.moveTo(center, center);\n    ctx.arc(center, center, redius, startRadian, endRadian, false);\n    ctx.fillStyle = colorCode;\n    ctx.fill();\n  }\n\n  function renderDonutIndent(canvasID) {\n    var indentArray = canvasID.replace(\"donut_indent_\", \"\").split(\"_\").map(function(el){\n      return el - 0;\n    });\n    var headerTag = \"h\" + indentArray.filter(function(el, index, array){return (el != 0);}).length;\n    var fontSize = getHeaderFontSize(headerTag);\n    var lineHeight = getHeaderLineHeight(headerTag);\n    var iconHalfSize = calcIconHalfSize(fontSize);\n    var marginTop = calcMarginTop(lineHeight, fontSize);\n    var center = calcCenter(fontSize);\n    var canvas = document.getElementById(canvasID);\n\n    // canvasの設定\n    initializeCanvasSize(iconHalfSize * 2, marginTop, canvas);\n\n    // 外側の円から描画していく\n    indentArray.forEach(function(el, index, array) {\n      var radius = Math.round(iconHalfSize * DonutIndent.radiusRatio[index]);\n      // 100%の円\n      renderDonut(radius - 1, center, 100, \"#fff\", canvas);\n      // 扇型\n      renderDonut(radius, center, el, DonutIndent.color[index], canvas);\n    });\n  }\n\n  // hタグを連番に変換\n  function createSequentilNo(hObject) {\n    var initialTag = {};\n    DonutIndent.headerTagNumbers.forEach(function(el) {\n      initialTag[el] = 0;\n    });\n\n    var sequentialNo = [];\n\n    $.each(hObject, function(index, value) {\n      var headers = $.extend(true, {}, initialTag);\n      if(index > 0) {\n        headers = $.extend(true, {}, sequentialNo[index - 1]);\n      }\n\n      var headerNumber = utils.headingNumber(value);\n\n      // set tagNumber\n      headers['headerNumber'] = headerNumber;\n\n      // count up\n      headers[headerNumber] += 1;\n\n      // reset\n      DonutIndent.headerTagNumbers.forEach(function(el) {\n        if(el > headerNumber) {\n          headers[el] = 0;\n        }\n      });\n      sequentialNo.push(headers);\n    });\n    return sequentialNo;\n  }\n\n  function createPercentage(sequentialNo) {\n    // 進捗率に変換\n    for(var i = 1; i < sequentialNo.length; i++) {\n      // ヘッダ階層が浅くなった時(例: h3からh2へ移った時)\n      if(sequentialNo[i]['headerNumber'] < sequentialNo[i-1]['headerNumber']) {\n        var normalizeHeder = DonutIndent.headerTagNumbers.filter(function(el) {\n          return (el > sequentialNo[i]['headerNumber']);\n        });\n\n        normalizeHeder.forEach(function(el, index, array) {\n          var max = sequentialNo[i-1][el];\n          for(var j = i - 1; j > 0; j--) {\n            if(sequentialNo[j][el] == 0) {\n              break;\n            }\n            sequentialNo[j][el] = Math.round(sequentialNo[j][el] / max * 100);\n          }\n        });\n      }\n      // ラストのとき\n      // この時は全部の要素について規格化しちゃえばいい\n      if(i == (sequentialNo.length - 1)) {\n        DonutIndent.headerTagNumbers.forEach(function(el, index, array) {\n          var max = sequentialNo[i][el];\n          for(var j = i; j >= 0; j--) {\n            if(sequentialNo[j][el] == 0) {\n              break;\n            }\n            sequentialNo[j][el] = Math.round(sequentialNo[j][el] / max * 100);\n          }\n        });\n      }\n    }\n    return sequentialNo;\n  }\n\n  function createID(hObject) {\n    var tag = createPercentage(createSequentilNo(hObject));\n\n    // IDに変換(_で結合)\n    return tag.map(function(el, index, array) {\n      return HEADER_TAG_PREFIX + DonutIndent.headerTagNumbers.map(function(e) {return el[e];}).join('_');\n    });\n  }\n\n  // ヘッダの先頭にcanvasを挿入\n  function appendCanvas(hObject, headerIDs) {\n    $.each(hObject, function(index, value) {\n      $(value).wrap('<div></div>');\n      var canvasHTML = '<div class=\"donut-indent\" style=\"float:left;\"><canvas id=\"' + headerIDs[index] + '\"></div>';\n      $(value).before(canvasHTML);\n    });\n  }\n\n  function appendDonutIndent() {\n    var hObject = $(\":header\").filter(function(index, el){return (utils.headingNumber(el) <= DonutIndent.settings.indentDepth)});\n    var headerIDs = createID(hObject);\n    appendCanvas(hObject,headerIDs);\n    headerIDs.forEach(function(el) {\n      renderDonutIndent(el);\n    });\n    var overlayContent = require('./overlay-content.js');\n    var content = overlayContent.create(hObject, headerIDs);\n    overlayContent.initialize();\n    $('#modal-content').append(content);\n  }\n\n  var DonutIndent = {};\n\n  DonutIndent = {\n    defaults: {\n      indentDepth: 3,\n      color: \"#59bb0c\",\n      gammmaValue: 1.8\n    },\n\n    settings: $.extend(true, {}, DonutIndent.defaults),\n\n    init: function(options) {\n      var color = require('./color.js');\n      DonutIndent.settings = $.extend(DonutIndent.defaults, options);\n      DonutIndent.headerTagNumbers = Array.apply(null, Array(DonutIndent.settings.indentDepth)).map(function (_, i) {return i+1;});\n      DonutIndent.radiusRatio = $.extend(true, [], DonutIndent.headerTagNumbers).reverse().map(function(el) {\n        return Math.pow(1.0 * el / DonutIndent.headerTagNumbers.length, 1 / DonutIndent.settings.gammmaValue);\n      });\n      DonutIndent.color = DonutIndent.headerTagNumbers.map(function(el) {\n        return color.darken(DonutIndent.settings.color, DARKEN_PERCENTAGE_DIFF * (el - 1));\n      });\n    }\n  };\n\n  // export\n  $.donutIndent = function(options){\n    DonutIndent.init(options);\n    appendDonutIndent();\n  }\n\n})(jQuery);\n\n// べた書きのHTMLを書き換えるために読み込み時にも実行\n$.donutIndent();\n\n},{\"./color.js\":1,\"./modal.js\":3,\"./overlay-content.js\":4,\"./utils.js\":5}],3:[function(require,module,exports){\n/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\n// リファレンス\n// https://syncer.jp/jquery-modal-window\n// http://coolwebwindow.com/jquery-lab/archives/352\n\n// スクロールバーの横幅を取得\n$('html').append('<div class=\"scrollbar\" style=\"overflow:scroll;\"></div>');\nvar scrollsize = window.innerWidth - $('.scrollbar').prop('clientWidth');\n$('.scrollbar').hide();\n\n// 新たに生成した要素でjQueryイベントが有効にならないので\n// documentに対してクリックイベントを登録する。ただしパフォーマンスは低下。\n// $(\".donut-indent\").on('click', function() {\n$(document).on('click',\".donut-indent\", function() {\n  // html、bodyを固定（cssでoverflow:hiddenにする)\n  $('html, body').addClass('lock');\n\n  //新しくモーダルウィンドウを起動しない\n  if($(\"#modal-overlay\").length > 0) return false;\n\n  //オーバーレイ用のHTMLコードを、[body]内の最後に生成する\n  $(\"body\").append('<div id=\"modal-overlay\"></div>');\n\n  //[$modal-overlay]をフェードインさせる\n  $(\"#modal-overlay\").fadeIn(\"slow\");\n\n  $('#modal-content').wrap(\"<div id='modal-wrap'></div>\");\n  $('#modal-wrap').show();\n\n  //コンテンツをセンタリングする\n  centeringModalSyncer();\n\n  //[$modal-content]をフェードインさせる\n  $(\"#modal-content\").fadeIn(\"slow\");\n\n  $(\"#modal-wrap, .overlay_anchor\").off().on('click', function() {\n    //[#modal-overlay]と[#modal-close]をフェードアウトする\n    $(\"#modal-content,#modal-overlay\").fadeOut(\"slow\",function() {\n      // html、bodyの固定解除\n      $('html, body').removeClass('lock');\n      //フェードアウト後、[#modal-overlay]をHTML(DOM)上から削除\n      $(\"#modal-overlay\").remove();\n      $(\"#modal-content\").unwrap(\"<div id='modal-wrap'></div>\");\n    });\n  });\n});\n\n//センタリングをする関数\nfunction centeringModalSyncer() {\n\n  //画面(ウィンドウ)の幅を取得し、変数[w]に格納\n  var w = $(window).width();\n\n  //画面(ウィンドウ)の高さを取得し、変数[h]に格納\n  var h = $(window).height();\n\n  //コンテンツ(#modal-content)の幅を取得し、変数[cw]に格納\n  var cw = $(\"#modal-content\").outerWidth();\n\n  //コンテンツ(#modal-content)の高さを取得し、変数[ch]に格納\n  var ch = $(\"#modal-content\").outerHeight();\n\n  if ((ch > h) && (cw > w)) {\n    $('#modal-content').css({'left': 0 + 'px','top': 0 + 'px'});\n  } else if ((ch > h) && (cw < w)) {\n    var x = (w - scrollsize - cw) / 2;\n    $('#modal-content').css({'left': x + 'px','top': 0 + 'px'});\n  } else if ((ch < h) && (cw > w)) {\n    var y = (h - scrollsize - ch) / 2;\n    $('#modal-content').css({'left': 0 + 'px','top': y + 'px'});\n  } else {\n    var x = (w - cw) / 2;\n    var y = (h - ch) / 2;\n    $('#modal-content').css({'left': x + 'px','top': y + 'px'});\n  }\n};\n\n//リサイズされたら、センタリングをする関数[centeringModalSyncer()]を実行する\n$( window ).resize( centeringModalSyncer ) ;\n\n},{}],4:[function(require,module,exports){\n/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\nvar utils = require('./utils.js');\n\nfunction ulElement(hObject, headerIDs) {\n  var content = braUl(1);\n  var ulCount = 0;\n\n  // pre(最初の要素のヘッダーインデントが最小とは限らない)\n  var preHeadingDiff = utils.headingNumber(hObject[0]) - minHeadingNumber(hObject);\n  content += braUl(preHeadingDiff);\n  ulCount += preHeadingDiff;\n\n  // main\n  for(var i = 0; i < hObject.length - 1; i++) {\n    var value = hObject[i];\n    content += listElement($(value).text(), headerIDs[i]);\n\n    var headingDiff = utils.headingNumber(hObject[i+1]) - utils.headingNumber(hObject[i]);\n    content += braUl(headingDiff);\n    content += ketUl(headingDiff);\n\n    ulCount += headingDiff;\n  }\n\n  var lastValue = hObject[hObject.length - 1];\n  content += listElement($(lastValue).text(), headerIDs[hObject.length - 1]);\n\n  // post\n  content += ketUl(-ulCount);\n\n  return content;\n}\n\nfunction listElement(text, id) {\n  var anchorID = toOverlayAnchorID(id);\n  return '<li>' + '<a class=\"overlay_anchor\" href=\"#' + id + '\" id=\"' + anchorID + '\">' + text + '</a>' + '</li>'\n}\n\n// header numberが減った時は<ul>を増やす\nfunction braUl(headingDiff){\n  var bra = '';\n  if(headingDiff > 0){\n    for(var j = 0; j < headingDiff; j++) {\n      bra += '<ul>';\n    }\n  }\n  return bra;\n}\n\n// header numberが増えた時は</ul>を増やす\nfunction ketUl(headingDiff){\n  var ket = '';\n  if(headingDiff < 0){\n    for(var j = 0; j < -headingDiff; j++) {\n      ket += '</ul>';\n    }\n  }\n  return ket;\n}\n\nfunction minHeadingNumber(hObject) {\n  var min = 6;\n  $.each(hObject, function(index, value) {\n    var hNo = utils.headingNumber(value);\n    if(hNo < min) {\n      min = hNo;\n    }\n  });\n  return min;\n}\n\nfunction initializeOverlayContent() {\n  if($('#modal-content').length > 0) {\n    $('#modal-content').children().remove();\n  } else {\n    $('body').append('<div id=\"modal-content\"></div>');\n  }\n}\n\n$(document).on('click',\".donut-indent\", function() {\n  var id = \"#\" + toOverlayAnchorID($(this).children(\"canvas\").attr(\"id\"));\n  $(id).css(\"font-weight\", \"bold\");\n  $(\"#modal-wrap, .overlay_anchor\").on('click', function() {\n    $(id).css(\"font-weight\", \"\");\n  });\n});\n\nfunction toOverlayAnchorID(id) {\n  return id + \"_overlay\";\n}\n\nmodule.exports = {\n  create: ulElement,\n  initialize: initializeOverlayContent\n}\n\n},{\"./utils.js\":5}],5:[function(require,module,exports){\n/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\nvar headingNumber = function(hObject){\n  if(hObject !== undefined) {\n    return hObject.tagName.replace('H', '') - 0;\n  }else {\n    return null;\n  }\n} \n\nmodule.exports = {\n  headingNumber: headingNumber\n}\n\n},{}]},{},[2])\n\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\nmodule.exports.darken = function(color, percentage) {\n  var rgb = splitRGB(color);\n  var hls = rgbToHls(rgb[0], rgb[1], rgb[2]);\n  var darkenRgb = hlsToRgb(hls.h, hls.l - percentage * 0.01, hls.s);\n  return rgbCode(darkenRgb.r, darkenRgb.g, darkenRgb.b)\n}\n\nfunction splitRGB(rgb) {\n  var rgbArray = [];\n  var rgb = rgb.replace(/^#/, \"\");\n  if(rgb.length == 6){\n    rgbArray = rgb.match(/.{2}/g).map(function (c) {\n      return parseInt(c, 16);\n    });\n  }else {\n    rgbArray = rgb.split('').map(function (c) {\n      return parseInt(c + c, 16);\n    });\n  }\n  return rgbArray;\n}\n\nfunction rgbCode(r, g, b){\n  return \"#\" + [r, g, b].map(function(el) {\n    return el.toString(16).replace(/^[0-9a-f]$/, \"0$&\");\n  }).join(\"\");\n}\n\nfunction rgbToHls(r, g, b) {\n  var h, // 0..360\n      l, s; // 0..1\n\n  // 0..1 に変換\n  r = r / 255;\n  g = g / 255;\n  b = b / 255;\n  var max = Math.max(Math.max(r, g), b),\n    min = Math.min(Math.min(r, g), b);\n\n  // hue の計算\n  if (max == min) {\n    h = 0; // 本来は定義されないが、仮に0を代入\n  } else if (max == r) {\n    h = 60 * (g - b) / (max - min) + 0;\n  } else if (max == g) {\n    h = (60 * (b - r) / (max - min)) + 120;\n  } else {\n    h = (60 * (r - g) / (max - min)) + 240;\n  }\n\n  while (h < 0) {\n    h += 360;\n  }\n\n  // Lightness の計算\n  l = (max + min) / 2;\n\n  // Saturation の計算\n  if (max == min) {\n    s = 0;\n  } else {\n    s = (l < 0.5)\n      ? (max - min) / (max + min)\n      : (max - min) / (2.0 - max - min);\n  }\n\n  return {'h': h, 'l': l, 's': s, 'type': 'HLS'};\n}\n\nfunction hlsToRgb(h, l, s) {\n  var r, g, b; // 0..255\n\n  while (h < 0) {\n    h += 360;\n  }\n  h = h % 360;\n\n  // 特別な場合 saturation = 0\n  if (s == 0) {\n    // → RGB は V に等しい\n    l = Math.round(l * 255);\n    return {'r': l, 'g': l, 'b': l, 'type': 'RGB'};\n  }\n\n  var m2 = (l < 0.5) ? l * (1 + s) : l + s - l * s,\n      m1 = l * 2 - m2,\n      tmp;\n\n  tmp = h + 120;\n  if (tmp > 360) {\n    tmp = tmp - 360\n  }\n\n  if (tmp < 60) {\n    r = (m1 + (m2 - m1) * tmp / 60);\n  } else if (tmp < 180) {\n    r = m2;\n  } else if (tmp < 240) {\n    r = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    r = m1;\n  }\n\n  tmp = h;\n  if (tmp < 60) {\n    g = m1 + (m2 - m1) * tmp / 60;\n  } else if (tmp < 180) {\n    g = m2;\n  } else if (tmp < 240) {\n    g = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    g = m1;\n  }\n\n  tmp = h - 120;\n  if (tmp < 0) {\n    tmp = tmp + 360\n  }\n  if (tmp < 60) {\n    b = m1 + (m2 - m1) * tmp / 60;\n  } else if (tmp < 180) {\n    b = m2;\n  } else if (tmp < 240) {\n    b = m1 + (m2 - m1) * (240 - tmp) / 60;\n  } else {\n    b = m1;\n  }\n\n  return {'r': Math.round(r * 255), 'g': Math.round(g * 255), 'b': Math.round(b * 255), 'type': 'RGB'};\n}\n","/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\n(function($){\n  \"use strict\";\n\n  var modal = require('./modal.js');\n  var utils = require('./utils.js');\n\n  var DARKEN_PERCENTAGE_DIFF = 10;\n  var HEADER_TAG_PREFIX = 'donut_indent_';\n\n  function getHeaderFontSize(headerNumber) {\n    return $(headerNumber + \":header\").css('fontSize').replace(\"px\", \"\") - 0;\n  }\n\n  function getHeaderLineHeight(headerNumber) {\n    return $(headerNumber + \":header\").css('line-height').replace(\"px\", \"\") - 0;\n  }\n\n  function calcIconHalfSize(fontSize) {\n    return Math.round(fontSize * 0.45);\n  }\n\n  function calcMarginTop(lineHeight, fontSize) {\n    return Math.round(fontSize * 0.05 + (lineHeight - fontSize) * 0.5);\n  }\n\n  function calcCenter(fontSize) {\n    return Math.round(fontSize * 0.45);\n  }\n\n  function initializeCanvasSize(iconSize, marginTop, canvas) {\n    $(canvas).css('margin-top', marginTop)\n    $(canvas).css('margin-right', marginTop)\n    canvas.width = iconSize;\n    canvas.height = iconSize;\n  }\n\n  function renderDonut(redius, center, percentage, colorCode, canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var ninetyDegree = 1.5707963267948966; // 90*Math.PI/180;\n    var startRadian = -ninetyDegree;\n    var endRadian = ninetyDegree * (percentage * 0.04 - 1);\n    ctx.beginPath();\n    ctx.moveTo(center, center);\n    ctx.arc(center, center, redius, startRadian, endRadian, false);\n    ctx.fillStyle = colorCode;\n    ctx.fill();\n  }\n\n  function renderDonutIndent(canvasID) {\n    var indentArray = canvasID.replace(\"donut_indent_\", \"\").split(\"_\").map(function(el){\n      return el - 0;\n    });\n    var headerTag = \"h\" + indentArray.filter(function(el, index, array){return (el != 0);}).length;\n    var fontSize = getHeaderFontSize(headerTag);\n    var lineHeight = getHeaderLineHeight(headerTag);\n    var iconHalfSize = calcIconHalfSize(fontSize);\n    var marginTop = calcMarginTop(lineHeight, fontSize);\n    var center = calcCenter(fontSize);\n    var canvas = document.getElementById(canvasID);\n\n    // canvasの設定\n    initializeCanvasSize(iconHalfSize * 2, marginTop, canvas);\n\n    // 外側の円から描画していく\n    indentArray.forEach(function(el, index, array) {\n      var radius = Math.round(iconHalfSize * DonutIndent.radiusRatio[index]);\n      // 100%の円\n      renderDonut(radius - 1, center, 100, \"#fff\", canvas);\n      // 扇型\n      renderDonut(radius, center, el, DonutIndent.color[index], canvas);\n    });\n  }\n\n  // hタグを連番に変換\n  function createSequentilNo(hObject) {\n    var initialTag = {};\n    DonutIndent.headerTagNumbers.forEach(function(el) {\n      initialTag[el] = 0;\n    });\n\n    var sequentialNo = [];\n\n    $.each(hObject, function(index, value) {\n      var headers = $.extend(true, {}, initialTag);\n      if(index > 0) {\n        headers = $.extend(true, {}, sequentialNo[index - 1]);\n      }\n\n      var headerNumber = utils.headingNumber(value);\n\n      // set tagNumber\n      headers['headerNumber'] = headerNumber;\n\n      // count up\n      headers[headerNumber] += 1;\n\n      // reset\n      DonutIndent.headerTagNumbers.forEach(function(el) {\n        if(el > headerNumber) {\n          headers[el] = 0;\n        }\n      });\n      sequentialNo.push(headers);\n    });\n    return sequentialNo;\n  }\n\n  function createPercentage(sequentialNo) {\n    // 進捗率に変換\n    for(var i = 1; i < sequentialNo.length; i++) {\n      // ヘッダ階層が浅くなった時(例: h3からh2へ移った時)\n      if(sequentialNo[i]['headerNumber'] < sequentialNo[i-1]['headerNumber']) {\n        var normalizeHeder = DonutIndent.headerTagNumbers.filter(function(el) {\n          return (el > sequentialNo[i]['headerNumber']);\n        });\n\n        normalizeHeder.forEach(function(el, index, array) {\n          var max = sequentialNo[i-1][el];\n          for(var j = i - 1; j > 0; j--) {\n            if(sequentialNo[j][el] == 0) {\n              break;\n            }\n            sequentialNo[j][el] = Math.round(sequentialNo[j][el] / max * 100);\n          }\n        });\n      }\n      // ラストのとき\n      // この時は全部の要素について規格化しちゃえばいい\n      if(i == (sequentialNo.length - 1)) {\n        DonutIndent.headerTagNumbers.forEach(function(el, index, array) {\n          var max = sequentialNo[i][el];\n          for(var j = i; j >= 0; j--) {\n            if(sequentialNo[j][el] == 0) {\n              break;\n            }\n            sequentialNo[j][el] = Math.round(sequentialNo[j][el] / max * 100);\n          }\n        });\n      }\n    }\n    return sequentialNo;\n  }\n\n  function createID(hObject) {\n    var tag = createPercentage(createSequentilNo(hObject));\n\n    // IDに変換(_で結合)\n    return tag.map(function(el, index, array) {\n      return HEADER_TAG_PREFIX + DonutIndent.headerTagNumbers.map(function(e) {return el[e];}).join('_');\n    });\n  }\n\n  // ヘッダの先頭にcanvasを挿入\n  function appendCanvas(hObject, headerIDs) {\n    $.each(hObject, function(index, value) {\n      $(value).wrap('<div></div>');\n      var canvasHTML = '<div class=\"donut-indent\" style=\"float:left;\"><canvas id=\"' + headerIDs[index] + '\"></div>';\n      $(value).before(canvasHTML);\n    });\n  }\n\n  function appendDonutIndent() {\n    var hObject = $(\":header\").filter(function(index, el){return (utils.headingNumber(el) <= DonutIndent.settings.indentDepth)});\n    var headerIDs = createID(hObject);\n    appendCanvas(hObject,headerIDs);\n    headerIDs.forEach(function(el) {\n      renderDonutIndent(el);\n    });\n    var overlayContent = require('./overlay-content.js');\n    var content = overlayContent.create(hObject, headerIDs);\n    overlayContent.initialize();\n    $('#modal-content').append(content);\n  }\n\n  var DonutIndent = {};\n\n  DonutIndent = {\n    defaults: {\n      indentDepth: 3,\n      color: \"#59bb0c\",\n      gammmaValue: 1.8\n    },\n\n    settings: $.extend(true, {}, DonutIndent.defaults),\n\n    init: function(options) {\n      var color = require('./color.js');\n      DonutIndent.settings = $.extend(DonutIndent.defaults, options);\n      DonutIndent.headerTagNumbers = Array.apply(null, Array(DonutIndent.settings.indentDepth)).map(function (_, i) {return i+1;});\n      DonutIndent.radiusRatio = $.extend(true, [], DonutIndent.headerTagNumbers).reverse().map(function(el) {\n        return Math.pow(1.0 * el / DonutIndent.headerTagNumbers.length, 1 / DonutIndent.settings.gammmaValue);\n      });\n      DonutIndent.color = DonutIndent.headerTagNumbers.map(function(el) {\n        return color.darken(DonutIndent.settings.color, DARKEN_PERCENTAGE_DIFF * (el - 1));\n      });\n    }\n  };\n\n  // export\n  $.donutIndent = function(options){\n    DonutIndent.init(options);\n    appendDonutIndent();\n  }\n\n})(jQuery);\n\n// べた書きのHTMLを書き換えるために読み込み時にも実行\n$.donutIndent();\n","/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\n\n// リファレンス\n// https://syncer.jp/jquery-modal-window\n// http://coolwebwindow.com/jquery-lab/archives/352\n\n// スクロールバーの横幅を取得\n$('html').append('<div class=\"scrollbar\" style=\"overflow:scroll;\"></div>');\nvar scrollsize = window.innerWidth - $('.scrollbar').prop('clientWidth');\n$('.scrollbar').hide();\n\n// 新たに生成した要素でjQueryイベントが有効にならないので\n// documentに対してクリックイベントを登録する。ただしパフォーマンスは低下。\n// $(\".donut-indent\").on('click', function() {\n$(document).on('click',\".donut-indent\", function() {\n  // html、bodyを固定（cssでoverflow:hiddenにする)\n  $('html, body').addClass('lock');\n\n  //新しくモーダルウィンドウを起動しない\n  if($(\"#modal-overlay\").length > 0) return false;\n\n  //オーバーレイ用のHTMLコードを、[body]内の最後に生成する\n  $(\"body\").append('<div id=\"modal-overlay\"></div>');\n\n  //[$modal-overlay]をフェードインさせる\n  $(\"#modal-overlay\").fadeIn(\"slow\");\n\n  $('#modal-content').wrap(\"<div id='modal-wrap'></div>\");\n  $('#modal-wrap').show();\n\n  //コンテンツをセンタリングする\n  centeringModalSyncer();\n\n  //[$modal-content]をフェードインさせる\n  $(\"#modal-content\").fadeIn(\"slow\");\n\n  $(\"#modal-wrap, .overlay_anchor\").off().on('click', function() {\n    //[#modal-overlay]と[#modal-close]をフェードアウトする\n    $(\"#modal-content,#modal-overlay\").fadeOut(\"slow\",function() {\n      // html、bodyの固定解除\n      $('html, body').removeClass('lock');\n      //フェードアウト後、[#modal-overlay]をHTML(DOM)上から削除\n      $(\"#modal-overlay\").remove();\n      $(\"#modal-content\").unwrap(\"<div id='modal-wrap'></div>\");\n    });\n  });\n});\n\n//センタリングをする関数\nfunction centeringModalSyncer() {\n\n  //画面(ウィンドウ)の幅を取得し、変数[w]に格納\n  var w = $(window).width();\n\n  //画面(ウィンドウ)の高さを取得し、変数[h]に格納\n  var h = $(window).height();\n\n  //コンテンツ(#modal-content)の幅を取得し、変数[cw]に格納\n  var cw = $(\"#modal-content\").outerWidth();\n\n  //コンテンツ(#modal-content)の高さを取得し、変数[ch]に格納\n  var ch = $(\"#modal-content\").outerHeight();\n\n  if ((ch > h) && (cw > w)) {\n    $('#modal-content').css({'left': 0 + 'px','top': 0 + 'px'});\n  } else if ((ch > h) && (cw < w)) {\n    var x = (w - scrollsize - cw) / 2;\n    $('#modal-content').css({'left': x + 'px','top': 0 + 'px'});\n  } else if ((ch < h) && (cw > w)) {\n    var y = (h - scrollsize - ch) / 2;\n    $('#modal-content').css({'left': 0 + 'px','top': y + 'px'});\n  } else {\n    var x = (w - cw) / 2;\n    var y = (h - ch) / 2;\n    $('#modal-content').css({'left': x + 'px','top': y + 'px'});\n  }\n};\n\n//リサイズされたら、センタリングをする関数[centeringModalSyncer()]を実行する\n$( window ).resize( centeringModalSyncer ) ;\n","/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\nvar utils = require('./utils.js');\n\nfunction ulElement(hObject, headerIDs) {\n  var content = braUl(1);\n  var ulCount = 0;\n\n  // pre(最初の要素のヘッダーインデントが最小とは限らない)\n  var preHeadingDiff = utils.headingNumber(hObject[0]) - minHeadingNumber(hObject);\n  content += braUl(preHeadingDiff);\n  ulCount += preHeadingDiff;\n\n  // main\n  for(var i = 0; i < hObject.length - 1; i++) {\n    var value = hObject[i];\n    content += listElement($(value).text(), headerIDs[i]);\n\n    var headingDiff = utils.headingNumber(hObject[i+1]) - utils.headingNumber(hObject[i]);\n    content += braUl(headingDiff);\n    content += ketUl(headingDiff);\n\n    ulCount += headingDiff;\n  }\n\n  var lastValue = hObject[hObject.length - 1];\n  content += listElement($(lastValue).text(), headerIDs[hObject.length - 1]);\n\n  // post\n  content += ketUl(-ulCount);\n\n  return content;\n}\n\nfunction listElement(text, id) {\n  var anchorID = toOverlayAnchorID(id);\n  return '<li>' + '<a class=\"overlay_anchor\" href=\"#' + id + '\" id=\"' + anchorID + '\">' + text + '</a>' + '</li>'\n}\n\n// header numberが減った時は<ul>を増やす\nfunction braUl(headingDiff){\n  var bra = '';\n  if(headingDiff > 0){\n    for(var j = 0; j < headingDiff; j++) {\n      bra += '<ul>';\n    }\n  }\n  return bra;\n}\n\n// header numberが増えた時は</ul>を増やす\nfunction ketUl(headingDiff){\n  var ket = '';\n  if(headingDiff < 0){\n    for(var j = 0; j < -headingDiff; j++) {\n      ket += '</ul>';\n    }\n  }\n  return ket;\n}\n\nfunction minHeadingNumber(hObject) {\n  var min = 6;\n  $.each(hObject, function(index, value) {\n    var hNo = utils.headingNumber(value);\n    if(hNo < min) {\n      min = hNo;\n    }\n  });\n  return min;\n}\n\nfunction initializeOverlayContent() {\n  if($('#modal-content').length > 0) {\n    $('#modal-content').children().remove();\n  } else {\n    $('body').append('<div id=\"modal-content\"></div>');\n  }\n}\n\n$(document).on('click',\".donut-indent\", function() {\n  var id = \"#\" + toOverlayAnchorID($(this).children(\"canvas\").attr(\"id\"));\n  $(id).css(\"font-weight\", \"bold\");\n  $(\"#modal-wrap, .overlay_anchor\").on('click', function() {\n    $(id).css(\"font-weight\", \"\");\n  });\n});\n\nfunction toOverlayAnchorID(id) {\n  return id + \"_overlay\";\n}\n\nmodule.exports = {\n  create: ulElement,\n  initialize: initializeOverlayContent\n}\n","/**\n * donut-indent\n * Copyright (c) 2015, kenji0x02. (MIT Licensed)\n * https://github.com/kenji0x02/donut-indent\n */\nvar headingNumber = function(hObject){\n  if(hObject !== undefined) {\n    return hObject.tagName.replace('H', '') - 0;\n  }else {\n    return null;\n  }\n} \n\nmodule.exports = {\n  headingNumber: headingNumber\n}\n"],"sourceRoot":"/source/"}